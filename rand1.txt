This is an ELF File!
Running Capstone Linear Disassembler (64-bit) starting from 1085 for 182 bytes!
0x43d:	push	rax
0x43e:	push	rsp
0x43f:	mov	r8, 0x4005b0
0x446:	mov	rcx, 0x400540
0x44d:	mov	rdi, 0x400526
0x454:	call	0x410
0x459:	hlt	
0x45a:	nop	word ptr [rax + rax]
0x460:	mov	eax, 0x60103f
0x465:	push	rbp
0x466:	sub	rax, 0x601038
0x46c:	cmp	rax, 0xe
0x470:	mov	rbp, rsp
0x473:	jbe	0x490
0x475:	mov	eax, 0
0x47a:	test	rax, rax
0x47d:	je	0x490
0x47f:	pop	rbp
0x480:	mov	edi, 0x601038
0x485:	jmp	rax
0x487:	nop	word ptr [rax + rax]
0x490:	pop	rbp
0x491:	ret	
0x492:	nop	dword ptr [rax]
0x496:	nop	word ptr cs:[rax + rax]
0x4a0:	mov	esi, 0x601038
0x4a5:	push	rbp
0x4a6:	sub	rsi, 0x601038
0x4ad:	sar	rsi, 3
0x4b1:	mov	rbp, rsp
0x4b4:	mov	rax, rsi
0x4b7:	shr	rax, 0x3f
0x4bb:	add	rsi, rax
0x4be:	sar	rsi, 1
0x4c1:	je	0x4d8
0x4c3:	mov	eax, 0
0x4c8:	test	rax, rax
0x4cb:	je	0x4d8
0x4cd:	pop	rbp
0x4ce:	mov	edi, 0x601038
0x4d3:	jmp	rax
0x4d5:	nop	dword ptr [rax]
0x4d8:	pop	rbp
0x4d9:	ret	
0x4da:	nop	word ptr [rax + rax]
0x4e0:	cmp	byte ptr [rip + 0x200b51], 0
0x4e7:	jne	0x4fa
0x4e9:	push	rbp
0x4ea:	mov	rbp, rsp
0x4ed:	call	0x460
0x4f2:	pop	rbp
0x4f3:	mov	byte ptr [rip + 0x200b3e], 1
0x4fa:	ret	
0x4fc:	nop	dword ptr [rax]
0x500:	mov	edi, 0x600e20
0x505:	cmp	qword ptr [rdi], 0
0x509:	jne	0x510
0x50b:	jmp	0x4a0
0x50d:	nop	dword ptr [rax]
0x510:	mov	eax, 0
0x515:	test	rax, rax
0x518:	je	0x50b
0x51a:	push	rbp
0x51b:	mov	rbp, rsp
0x51e:	call	rax
0x520:	pop	rbp
0x521:	jmp	0x4a0
0x526:	push	rbp
0x527:	mov	rbp, rsp
0x52a:	mov	edi, 0x4005c4
0x52f:	mov	eax, 0
0x534:	call	0x400
0x539:	mov	eax, 0
0x53e:	pop	rbp
0x53f:	ret	
0x540:	push	r15
0x542:	push	r14
0x544:	mov	r15d, edi
0x547:	push	r13
0x549:	push	r12
0x54b:	lea	r12, qword ptr [rip + 0x2008be]
0x552:	push	rbp
0x553:	lea	rbp, qword ptr [rip + 0x2008be]
0x55a:	push	rbx
0x55b:	mov	r14, rsi
0x55e:	mov	r13, rdx
0x561:	sub	rbp, r12
0x564:	sub	rsp, 8
0x568:	sar	rbp, 3
0x56c:	call	0x3c8
0x571:	test	rbp, rbp
0x574:	je	0x596
0x576:	xor	ebx, ebx
0x578:	nop	dword ptr [rax + rax]
0x580:	mov	rdx, r13
0x583:	mov	rsi, r14
0x586:	mov	edi, r15d
0x589:	call	qword ptr [r12 + rbx*8]
0x58d:	add	rbx, 1
0x591:	cmp	rbx, rbp
0x594:	jne	0x580
0x596:	add	rsp, 8
0x59a:	pop	rbx
0x59b:	pop	rbp
0x59c:	pop	r12
0x59e:	pop	r13
0x5a0:	pop	r14
0x5a2:	pop	r15
0x5a4:	ret	
0x5a5:	nop	
0x5a6:	nop	word ptr cs:[rax + rax]
0x5b0:	ret	
0x5b2:	add	byte ptr [rax], al
0x5b4:	sub	rsp, 8
0x5b8:	add	rsp, 8
0x5bc:	ret	
0x5bd:	add	byte ptr [rax], al
0x5bf:	add	byte ptr [rcx], al
0x5c1:	add	byte ptr [rdx], al
0x5c3:	add	byte ptr [rax + 0x65], cl
0x5c6:	insb	byte ptr [rdi], dx
0x5c7:	insb	byte ptr [rdi], dx
0x5c8:	outsd	dx, dword ptr [rsi]
0x5c9:	and	byte ptr [rcx + 0x73], ah
0x5cc:	jae	0x633
0x5ce:	insd	dword ptr [rdi], dx
